// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PetShopWeb.InfrastructureEFCore;

namespace PetShopWeb.Migrations
{
    [DbContext(typeof(PetshopDbContext))]
    [Migration("20220922181945_initial-db")]
    partial class initialdb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("PetShopWeb.InfrastructureEFCore.Entities.AnimalType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("TypeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AnimalType");
                });

            modelBuilder.Entity("PetShopWeb.InfrastructureEFCore.Entities.Bird", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("AnimalTypeId")
                        .HasColumnType("int");

                    b.Property<byte>("BirdType")
                        .HasColumnType("tinyint");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("FeedTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("AnimalTypeId");

                    b.HasIndex("FeedTypeId");

                    b.ToTable("Bird");
                });

            modelBuilder.Entity("PetShopWeb.InfrastructureEFCore.Entities.Cat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("AnimalTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("FeedTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("AnimalTypeId");

                    b.HasIndex("FeedTypeId");

                    b.ToTable("Cat");
                });

            modelBuilder.Entity("PetShopWeb.InfrastructureEFCore.Entities.Dog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("AnimalTypeId")
                        .HasColumnType("int");

                    b.Property<byte>("BirdType")
                        .HasColumnType("tinyint");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("FeedTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("AnimalTypeId");

                    b.HasIndex("FeedTypeId");

                    b.ToTable("Dog");
                });

            modelBuilder.Entity("PetShopWeb.InfrastructureEFCore.Entities.FeedType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("FeedName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FeedType");
                });

            modelBuilder.Entity("PetShopWeb.InfrastructureEFCore.Entities.Bird", b =>
                {
                    b.HasOne("PetShopWeb.InfrastructureEFCore.Entities.AnimalType", "AnimalType")
                        .WithMany()
                        .HasForeignKey("AnimalTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PetShopWeb.InfrastructureEFCore.Entities.FeedType", "FeedType")
                        .WithMany()
                        .HasForeignKey("FeedTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AnimalType");

                    b.Navigation("FeedType");
                });

            modelBuilder.Entity("PetShopWeb.InfrastructureEFCore.Entities.Cat", b =>
                {
                    b.HasOne("PetShopWeb.InfrastructureEFCore.Entities.AnimalType", "AnimalType")
                        .WithMany()
                        .HasForeignKey("AnimalTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PetShopWeb.InfrastructureEFCore.Entities.FeedType", "FeedType")
                        .WithMany()
                        .HasForeignKey("FeedTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AnimalType");

                    b.Navigation("FeedType");
                });

            modelBuilder.Entity("PetShopWeb.InfrastructureEFCore.Entities.Dog", b =>
                {
                    b.HasOne("PetShopWeb.InfrastructureEFCore.Entities.AnimalType", "AnimalType")
                        .WithMany()
                        .HasForeignKey("AnimalTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PetShopWeb.InfrastructureEFCore.Entities.FeedType", "FeedType")
                        .WithMany()
                        .HasForeignKey("FeedTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AnimalType");

                    b.Navigation("FeedType");
                });
#pragma warning restore 612, 618
        }
    }
}
